
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Farzan
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        
        initComponents();
    }
   


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
            
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnedit = new javax.swing.JButton();
        btnadd = new javax.swing.JButton();
        btnview = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnladd = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        txtconfirm = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        combotype = new javax.swing.JComboBox<>();
        pnlview = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        pnlupdate = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtpw = new javax.swing.JTextField();
        txtuname = new javax.swing.JTextField();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        combousertype = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Panel");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnedit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnedit.setText("Update Users");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        getContentPane().add(btnedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 220, 60));

        btnadd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnadd.setText("Add New User");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        getContentPane().add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 220, 60));

        btnview.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnview.setText("View Users");
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        getContentPane().add(btnview, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 220, 60));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/pngwing.com (1) (1).png"))); // NOI18N
        jButton2.setAlignmentX(2.0F);
        jButton2.setAlignmentY(1.0F);
        jButton2.setBorder(null);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setHideActionText(true);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setMargin(new java.awt.Insets(2, 12, 2, 14));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 30, 30));

        jLabel2.setBackground(new java.awt.Color(51, 51, 255));
        jLabel2.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Admin Panel");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 310, 120));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 550, 30));

        pnladd.setVisible(false);
        pnladd.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("UserName");
        pnladd.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 121, 37));
        pnladd.add(txtusername, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 290, 37));

        jLabel4.setText("Password");
        pnladd.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 121, 37));
        pnladd.add(txtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 290, 40));

        jLabel5.setText("Confirm Password");
        pnladd.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, 37));
        pnladd.add(txtconfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 290, 37));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Create Account");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        pnladd.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 270, -1, -1));

        jLabel6.setText("User Type");
        pnladd.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 121, 37));

        combotype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "HR Manager", "HR Assistant" }));
        combotype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combotypeActionPerformed(evt);
            }
        });
        pnladd.add(combotype, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, 290, 37));

        jTabbedPane1.addTab("Add", pnladd);

        pnlview.setVisible(false);
        pnlview.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserType", "UserName", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        pnlview.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 510, 330));

        jTabbedPane1.addTab("View", pnlview);

        pnlupdate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserType", "UserName", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        pnlupdate.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 470, 110));

        jLabel7.setText("Password");
        pnlupdate.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, -1, -1));

        jLabel8.setText("UserType");
        pnlupdate.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, -1, -1));

        jLabel9.setText("UserName");
        pnlupdate.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        txtpw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpwActionPerformed(evt);
            }
        });
        pnlupdate.add(txtpw, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 180, 30));

        txtuname.setEditable(false);
        txtuname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunameActionPerformed(evt);
            }
        });
        pnlupdate.add(txtuname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 180, 30));

        btnupdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        pnlupdate.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, -1, -1));

        btndelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        pnlupdate.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, -1, -1));

        combousertype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "HR Manager", "HR Assistant" }));
        pnlupdate.add(combousertype, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 180, 30));

        jTabbedPane1.addTab("tab3", pnlupdate);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 550, 390));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/pngtree-blue-round-technology-dashboard-picture-image_1598386.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 0, 1200, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Login login = new Login ();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        pnlupdate.setVisible(false);
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
        // TODO add your handling code here:
          jTabbedPane1.setSelectedIndex(1);
          userView();
          
        
    }//GEN-LAST:event_btnviewActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
          jTabbedPane1.setSelectedIndex(2);
          userEdit();

    }//GEN-LAST:event_btneditActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String usertype = (String)combotype.getSelectedItem();        
        String username = txtusername.getText();
        String password = String.valueOf(txtpassword.getPassword());
        String confirmPassword = String.valueOf(txtconfirm.getPassword());


if (password.equals(confirmPassword)) {
    // The passwords match, so save the password to the database
    // Insert your code to save the password to the database here
} else {
    // The passwords do not match, so display an error message
    JOptionPane.showMessageDialog(null, "Passwords do not match. Please try again.");
    return;
}

        
        if(username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()){
            JOptionPane.showMessageDialog(this,"Fill all the fields","Error",JOptionPane.ERROR_MESSAGE );
        }
        else{
        //Start the Login process
        userRegister(usertype,username,password);
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtpwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpwActionPerformed

    private void txtunameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunameActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblmodel = (DefaultTableModel)jTable3.getModel();
        String Utype = tblmodel.getValueAt(jTable3.getSelectedRow(),0).toString();
        String Uname = tblmodel.getValueAt(jTable3.getSelectedRow(),1).toString();
        String Pw = tblmodel.getValueAt(jTable3.getSelectedRow(),2).toString();
        
        //Set values to the textfields
        combousertype.setSelectedItem(Utype);
        txtuname.setText(Uname);
        txtpw.setText(Pw);
        

    }//GEN-LAST:event_jTable3MouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
      
        try
           
       {
           String name = txtuname.getText();
        Connection con = DBConnection.connectDB();
        String sql = "DELETE FROM users WHERE UserName ='"+name+"' ";
        PreparedStatement pst = con.prepareStatement(sql);
        
        
        int i = pst.executeUpdate();
            if(i>0)
            {
                JOptionPane.showMessageDialog(null,"Data Deleted Successfully");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"there is an error");
            }
            pst.close();
            con.close();
       }
       catch(Exception e)
       {
            JOptionPane.showMessageDialog(null,e);
       } 
        userView1();
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        updateData();
        userView1();

        
    }//GEN-LAST:event_btnupdateActionPerformed

    private void combotypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combotypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combotypeActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }
    
    
    private void updateData() {

        try
           
       {
           String name = txtuname.getText();
        Connection con = DBConnection.connectDB();
        String sql = "update users set UserType=?,UserName=?,Password=? where UserName ='"+name+"' ";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1,combousertype.getSelectedItem().toString());
        pst.setString(2,txtuname.getText());
        pst.setString(3,txtpw.getText());
       
        
        int i = pst.executeUpdate();
            if(i>0)
            {
                JOptionPane.showMessageDialog(null,"Data Updated Successfully");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"there is an error");
            }
            pst.close();
            con.close();
       }
       catch(Exception e)
       {
            JOptionPane.showMessageDialog(null,e);
       } 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnupdate;
    private javax.swing.JButton btnview;
    private javax.swing.JComboBox<String> combotype;
    private javax.swing.JComboBox<String> combousertype;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JPanel pnladd;
    private javax.swing.JPanel pnlupdate;
    private javax.swing.JPanel pnlview;
    private javax.swing.JPasswordField txtconfirm;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtpw;
    private javax.swing.JTextField txtuname;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables

    private void userRegister(String usertype, String username, String password) {
           Connection dbconn = DBConnection.connectDB();
        if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("INSERT INTO users (UserType,UserName,Password) VALUES(?,?,?)");
  
            
            st.setString(1,usertype );
            st.setString(2, username);
            st.setString(3, password);
            
            int res = st.executeUpdate();
            

            JOptionPane.showMessageDialog(this,"User Added Successfully","Success",JOptionPane.INFORMATION_MESSAGE );
            txtusername.setText("");
            txtpassword.setText("");
            txtconfirm.setText("");

            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }else{
            System.out.println("The Connection not Available");
        }
    }
    
    private void userView() {
          Connection dbconn = DBConnection.connectDB();
    if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("Select * from users");

         ResultSet rs=st.executeQuery();
          DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
            
            // clear existing data in the table
            tblModel.setRowCount(0);
         
         while(rs.next()){
         //data will be added until finish
         String UserType = rs.getString("UserType");
         String UserName =rs.getString("UserName");
         String Password =rs.getString("Password");
         
         //String array to store data to table
         String tbData[] = {UserType,UserName,Password};
             
             //add string data to jtable
             tblModel.addRow(tbData);
             
         }
         
            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The Connection not Available");
    }
    }
    
    private void userView1() {
          Connection dbconn = DBConnection.connectDB();
    if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("Select * from users");

         ResultSet rs=st.executeQuery();
          DefaultTableModel tblModel = (DefaultTableModel)jTable3.getModel();
            
            // clear existing data in the table
            tblModel.setRowCount(0);
         
         while(rs.next()){
         //data will be added until finish
         String UserType = rs.getString("UserType");
         String UserName =rs.getString("UserName");
         String Password =rs.getString("Password");
         
         //String array to store data to table
         String tbData[] = {UserType,UserName,Password};
             
             //add string data to jtable
             tblModel.addRow(tbData);
             
         }
         
            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The Connection not Available");
    }
    }
    private void userEdit() {
          Connection dbconn = DBConnection.connectDB();
    if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("Select * from users");

         ResultSet rs=st.executeQuery();
          DefaultTableModel tblModel = (DefaultTableModel)jTable3.getModel();
            
            // clear existing data in the table
            tblModel.setRowCount(0);
         
         while(rs.next()){
         //data will be added until finish
         String UserType = rs.getString("UserType");
         String UserName =rs.getString("UserName");
         String Password =rs.getString("Password");
         
         //String array to store data to table
         String tbData[] = {UserType,UserName,Password};
             
             //add string data to jtable
             tblModel.addRow(tbData);
             
         }
         
            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The Connection not Available");
    }
    }

    
    
    
}
