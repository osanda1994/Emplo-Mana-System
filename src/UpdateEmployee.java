
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Farzan
 */
public class UpdateEmployee extends javax.swing.JFrame {

    /**
     * Creates new form Viewemp
     */
    public UpdateEmployee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        txtsearch = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtepf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtdob = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txttp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        combodes = new javax.swing.JComboBox<>();
        combodep = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Employee ");
        setMinimumSize(new java.awt.Dimension(912, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EmpName", "EPFNo", "Address", "Dob", "TP", "Email", "Department", "Designation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 820, 170));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 48)); // NOI18N
        jLabel1.setText("Update Employee");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 300, 40));

        btnback.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 520, 130, 40));

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/pngwing.com (1) (1).png"))); // NOI18N
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        getContentPane().add(btnexit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 40, 40));

        btnrefresh.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnrefresh.setText("Refresh");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnrefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 520, 130, 40));

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 210, 30));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 520, 130, 40));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 130, 40));

        jLabel2.setText("Employee Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 250, -1));

        jLabel3.setText("EPF Number");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, -1, -1));

        txtepf.setEditable(false);
        txtepf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtepfActionPerformed(evt);
            }
        });
        getContentPane().add(txtepf, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 250, -1));

        jLabel4.setText("Address");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));
        getContentPane().add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, 250, -1));

        jLabel5.setText("Date of Birth");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, -1, -1));

        txtdob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdobActionPerformed(evt);
            }
        });
        getContentPane().add(txtdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 450, 250, -1));

        jLabel6.setText("Telephone");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, -1, 20));
        getContentPane().add(txttp, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 250, 30));

        jLabel7.setText("Email");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, -1, 20));

        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, 250, 30));

        jLabel8.setText("Department");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 410, -1, 20));

        jLabel9.setText("Designation");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, -1, 20));

        getContentPane().add(combodes, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 450, 250, 30));

        combodep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combodepActionPerformed(evt);
            }
        });
        getContentPane().add(combodep, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 410, 250, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/pngwing.com_1.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 80, 50, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        
        HRManager hrmanager = new HRManager();
        hrmanager.setVisible(true);
        this.dispose();
        
       
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:

        Login login = new Login ();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
        empView();
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        Connection dbconn = DBConnection.connectDB();
    if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("Select from employee where Ename=? ,EPF_No=? ,Department=? ,Designation=? ");
             st.setString(1,txtsearch.getText());
             st.setString(2,txtsearch.getText());
             st.setString(3,txtsearch.getText());
             st.setString(4,txtsearch.getText());
             

         ResultSet rs=st.executeQuery();
            

        // while(rs.next()){
         
             
        // }
         
            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The Connection not Available");
    }
        
    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateData();
        empView();
        clear();
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        
        try
           
       {
           String code = txtepf.getText();
        Connection con = DBConnection.connectDB();
        String sql = "DELETE FROM employee WHERE EPF_No ='"+code+"' ";
        PreparedStatement pst = con.prepareStatement(sql);
        
        
        int i = pst.executeUpdate();
            if(i>0)
            {
                JOptionPane.showMessageDialog(null,"Data Deleted Successfully");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"there is an error");
            }
            pst.close();
            con.close();
       }
       catch(Exception e)
       {
            JOptionPane.showMessageDialog(null,e);
       } 
        empView();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtepfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtepfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtepfActionPerformed

    private void txtdobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdobActionPerformed

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        populateComboBox();
        populateComboBox1();
        
        
         DefaultTableModel tblmodel = (DefaultTableModel)jTable1.getModel();
         
        String name = tblmodel.getValueAt(jTable1.getSelectedRow(),0).toString();
        String epf = tblmodel.getValueAt(jTable1.getSelectedRow(),1).toString();
        String address = tblmodel.getValueAt(jTable1.getSelectedRow(),2).toString();
        String dob = tblmodel.getValueAt(jTable1.getSelectedRow(),3).toString();
        String tp = tblmodel.getValueAt(jTable1.getSelectedRow(),4).toString();
        String email = tblmodel.getValueAt(jTable1.getSelectedRow(),5).toString();
        String dep = tblmodel.getValueAt(jTable1.getSelectedRow(),6).toString();
        String des = tblmodel.getValueAt(jTable1.getSelectedRow(),7).toString();
       
        
        //Set values to the textfields
        txtname.setText(name);
        txtepf.setText(epf);
        txtaddress.setText(address);
        txtdob.setText(dob);
        txttp.setText(tp);
        txtemail.setText(email);
        combodep.setSelectedItem(dep);
        combodes.setSelectedItem(des);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String id = txtsearch.getText();
          try
        {
             Connection con = DBConnection.connectDB();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from employee where EPF_No='"+id+"'|| Ename='"+id+"' || Department='"+id+"' || Designation='"+id+"' ");
            
            
           jTable1.setModel (DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void combodepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combodepActionPerformed
        // TODO add your handling code here:
        populateComboBox1();
    }//GEN-LAST:event_combodepActionPerformed

    
    public void clear(){
    txtname.setText("");
    txtepf.setText("");
    txtaddress.setText("");
    txtdob.setText("");
    txttp.setText("");
    txtemail.setText("");
    combodep.setSelectedIndex(0);
    combodes.setSelectedIndex(0);
    }
 
     private void populateComboBox() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        conn = DBConnection.connectDB();

        if (conn != null) {
            // SQL query to retrieve data from database column
            String sql = "SELECT DepName FROM department where Status='Active'";

            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();

            // Clear the combo box
            combodep.removeAllItems();

            // Populate the combo box with data
            while (rs.next()) {
                combodep.addItem(rs.getString("DepName"));
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        // Close the result set, statement, and connection
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
            }
        }

        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        }

        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
            }
        }
    }
}
     
private void populateComboBox1() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        String selectedDep = combodep.getSelectedItem().toString();
        conn = DBConnection.connectDB();

        if (conn != null) {
            // SQL query with JOIN to retrieve data from both tables
            String sql = "SELECT DesName FROM designation d " +
                         "JOIN department dep ON d.Department = dep.DepName " +
                         "WHERE dep.Status = 'Active' AND d.Status = 'Active' " +
                         "AND dep.DepName = ?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, selectedDep);
            rs = stmt.executeQuery();

            // Clear the combo box
            combodes.removeAllItems();

            // Populate the combo box with data
            while (rs.next()) {
                combodes.addItem(rs.getString("DesName"));
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        // Close the result set, statement, and connection
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
            }
        }

        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        }

        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
            }
        }
    }
}
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Viewemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Viewemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Viewemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Viewemp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JComboBox<String> combodep;
    private javax.swing.JComboBox<String> combodes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtdob;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtepf;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttp;
    // End of variables declaration//GEN-END:variables

private void updateData() {

        try
           
       {
           String code = txtepf.getText();
        Connection con = DBConnection.connectDB();
        String sql = "update employee set EName=?,EPF_No=?,Address=?, Dob=? ,TP=? ,Email=?,Department=?,Designation=? where EPF_No ='"+code+"' ";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1,txtname.getText());
        pst.setString(2,txtepf.getText());
        pst.setString(3,txtaddress.getText());
        pst.setString(4,txtdob.getText());
        pst.setString(5,txttp.getText());
        pst.setString(6,txtemail.getText());
        pst.setString(7,combodep.getSelectedItem().toString());
        pst.setString(8,combodes.getSelectedItem().toString());
        
        int i = pst.executeUpdate();
            if(i>0)
            {
                JOptionPane.showMessageDialog(null,"Data Updated Successfully");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"there is an error");
            }
            pst.close();
            con.close();
       }
       catch(Exception e)
       {
            JOptionPane.showMessageDialog(null,e);
       } 
     
}
    
    
    
private void empView() {
          Connection dbconn = DBConnection.connectDB();
    if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("Select * from employee");

         ResultSet rs=st.executeQuery();
          DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
            
            // clear existing data in the table
            tblModel.setRowCount(0);
         
         while(rs.next()){
         //data will be added until finish
         String Ename = rs.getString("Ename");
         String EPF_No =rs.getString("EPF_No");
         String Address =rs.getString("Address");
         String Dob = rs.getString("Dob");
         String TP =rs.getString("TP");
         String Email =rs.getString("Email");
         String Department = rs.getString("Department");
         String Designation =rs.getString("Designation");
         
         //String array to store data to table
         String tbData[] = {Ename,EPF_No,Address,Dob,TP,Email,Department,Designation};
             
             //add string data to jtable
             tblModel.addRow(tbData);
             
         }
         
            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        System.out.println("The Connection not Available");
    }
    }



}
