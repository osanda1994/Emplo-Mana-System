
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Farzan
 */
public class AddEmployee extends javax.swing.JFrame {

    /**
     * Creates new form AddEmployee
     */
    public AddEmployee() {
        initComponents();
        populateComboBox();
        populateComboBox1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txttp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtaddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        combodep = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        combodes = new javax.swing.JComboBox<>();
        txtemail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtdob = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnback = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtepf = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Employee");
        setMinimumSize(new java.awt.Dimension(800, 770));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Stencil", 0, 36)); // NOI18N
        jLabel2.setText("Add New Employee");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 350, 80));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel3.setText("Telephone");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 120, 40));

        txttp.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txttp, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, 440, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setText("Department");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, 120, 40));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel5.setText("Address");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 90, 40));

        txtaddress.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 440, 40));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 90, 40));

        txtname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtname, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 440, 40));

        combodep.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        combodep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combodepActionPerformed(evt);
            }
        });
        getContentPane().add(combodep, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 440, 41));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel7.setText("Designation");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 120, 40));

        combodes.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        combodes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combodesActionPerformed(evt);
            }
        });
        getContentPane().add(combodes, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, 440, 41));

        txtemail.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 390, 440, 40));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 120, 40));

        txtdob.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, 440, 40));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel9.setText("Date of Birth");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 150, 40));

        btnback.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        getContentPane().add(btnback, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 580, 130, 40));

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnsave.setText("Save Changes");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 580, 160, 40));

        btnexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pics/pngwing.com (1) (1).png"))); // NOI18N
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        getContentPane().add(btnexit, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 650, 40, 40));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel10.setText("EPF Number");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 130, 40));

        txtepf.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        getContentPane().add(txtepf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 440, 40));

        btnclear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnclear.setText("Clear Form");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        getContentPane().add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 580, 150, 40));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        // TODO add your handling code here:

        Login login = new Login ();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        HRManager hrmanager = new HRManager();
        hrmanager.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnbackActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        txtname.setText(null);
        txtepf.setText(null);
        txtaddress.setText(null);
        txtdob.setText(null);
        txttp.setText(null);
        txtemail.setText(null);
        combodep.setSelectedIndex(0);
        combodes.setSelectedIndex(0);

        
    }//GEN-LAST:event_btnclearActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        String name = txtname.getText();
        String epf = txtepf.getText();
        String address = txtaddress.getText();
        String dob = txtdob.getText();
        String tp = txttp.getText();
        String email = txtemail.getText();
        String dep = (String)combodep.getSelectedItem(); 
        String des = (String)combodes.getSelectedItem(); 
        
        if(name.isEmpty() || epf.isEmpty() || address.isEmpty() || dob.isEmpty()|| tp.isEmpty()|| email.isEmpty() || dep.isEmpty()|| des.isEmpty()){
            JOptionPane.showMessageDialog(this,"Fill all the fields","Error",JOptionPane.ERROR_MESSAGE );
        }
        else{
        //Add data to the database
        addEmp(name,epf,address,dob,tp,email,dep,des);
        
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void combodepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combodepActionPerformed
        // TODO add your handling code here:
        populateComboBox1();
    }//GEN-LAST:event_combodepActionPerformed

    
    
    private void combodesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combodesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combodesActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnsave;
    private javax.swing.JComboBox<String> combodep;
    private javax.swing.JComboBox<String> combodes;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtaddress;
    private javax.swing.JTextField txtdob;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtepf;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txttp;
    // End of variables declaration//GEN-END:variables

private void addEmp(String name, String epf, String address,String dob, String tp, String email,String dep, String des) {
           Connection dbconn = DBConnection.connectDB();
        if(dbconn != null){
        try {
            PreparedStatement st = (PreparedStatement)
                    dbconn.prepareStatement("INSERT INTO employee (Ename,EPF_No,Address,Dob,TP,Email,Department,Designation) VALUES(?,?,?,?,?,?,?,?)");
  
            
            st.setString(1,name );
            st.setString(2, epf);
            st.setString(3, address);
            st.setString(4,dob );
            st.setString(5, tp);
            st.setString(6, email);
            st.setString(7,dep );
            st.setString(8, des);
            
            int res = st.executeUpdate();
            

            JOptionPane.showMessageDialog(this,"Employee Added Successfully","Success",JOptionPane.INFORMATION_MESSAGE );
            txtname.setText("");
            txtepf.setText("");
            txtaddress.setText("");
            txtdob.setText("");
            txttp.setText("");
            txtemail.setText("");
            combodep.setSelectedItem(null);
            combodes.setSelectedItem(null);

            
        } catch (SQLException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }else{
            System.out.println("The Connection not Available");
        }
    }




private void populateComboBox() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        conn = DBConnection.connectDB();

        if (conn != null) {
            // SQL query to retrieve data from database column
            String sql = "SELECT DepName FROM department where Status='Active'";

            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();

            // Clear the combo box
            combodep.removeAllItems();

            // Populate the combo box with data
            while (rs.next()) {
                combodep.addItem(rs.getString("DepName"));
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        // Close the result set, statement, and connection
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
            }
        }

        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        }

        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
            }
        }
    }
}




private void populateComboBox1() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        String selectedDep = combodep.getSelectedItem().toString();
        conn = DBConnection.connectDB();

        if (conn != null) {
            // SQL query with JOIN to retrieve data from both tables
            String sql = "SELECT DesName FROM designation d " +
                         "JOIN department dep ON d.Department = dep.DepName " +
                         "WHERE dep.Status = 'Active' AND d.Status = 'Active' " +
                         "AND dep.DepName = ?";
            stmt = conn.prepareStatement(sql);
            stmt.setString(1, selectedDep);
            rs = stmt.executeQuery();

            // Clear the combo box
            combodes.removeAllItems();

            // Populate the combo box with data
            while (rs.next()) {
                combodes.addItem(rs.getString("DesName"));
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        // Close the result set, statement, and connection
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
            }
        }

        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException e) {
            }
        }

        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
            }
        }
    }
}







}
